#!/usr/bin/env bash
#
# Toggle between light and dark themes.
#
# Copyright (C) 2017-2022 Rafael Cavalcanti <https://rafaelc.org/dev>
# Licensed under GPLv3

readonly config_path="$HOME/.config/light-dark.conf"
readonly config_keys=("theme_light" "theme_dark")

main() {
	[[ $# -gt 0 ]] && usage

	get_config
	toggle
}

usage() {
	printf "Usage: %s\n" "$(basename "$0")"
	exit 1
}

log() {
	printf "%s\n" "$*" 1>&2
}

get_config() {
	[[ -e "$config_path" ]] || create_config
	source "$config_path"
	check_config
}

create_config() {
	log "Creating config at %s. Edit it and run again.\n" "${config_path/$HOME/\~}"
	for key in "${config_keys[@]}"; do
		printf "%s=\n" "$key" >> "$config_path"
	done
	exit 1
}

check_config() {
	for key in "${config_keys[@]}"; do
		if [[ -z "${!key}" ]]; then
			log "%s not found in config file." "$key"
			exit 1
		fi
	done
}

toggle() {
	if pidof xsettingsd > /dev/null; then
		toggle_xsettingsd
	else
		log "This desktop is not supported."
	fi
}

toggle_xsettingsd() {
	local -r config_file="$HOME/.config/xsettingsd/xsettingsd.conf"
	local -r theme_current="$(awk -F' ' '/^Net\/ThemeName / {gsub("\"","", $2); print $2}' "$config_file")"

	if [[ "$theme_current" == "$theme_light" ]]; then
		local -r theme_new="$theme_dark"
		local -r scheme_new="prefer-dark"
	else
		local -r theme_new="$theme_light"
		local -r scheme_new="prefer-light"
	fi

	sed -i "s#^Net/ThemeName .*\$#Net/ThemeName \"$theme_new\"#" "$config_file"
	killall -HUP xsettingsd

	# Set theme on gnome
	# This is relevant on dwm because:
	# - prefer-dark sets some gnome applications to dark.
	# - gtk-theme (used for theming "legacy" apps) sets Qt
	# applications dark, since we are using qgnomeplatform.
	gsettings set org.gnome.desktop.interface gtk-theme "'$theme_new'"
	gsettings set org.gnome.desktop.interface color-scheme "'$scheme_new'"
}

main "$@"
