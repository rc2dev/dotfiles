#!/usr/bin/env python3
#
# Simple script to read a markdown file and reverse its parts, such as
# second-level sections, bullets, etc.
#
# Copyright (C) 2020 Rafael Cavalcanti <https://rafaelc.org/dev>
# Licensed under GPLv3
#

import argparse
import os
import sys


def main():
    args = parse_args()
    sections = get_sections(args.filename, args.delimiter)
    reversed = reverse_sections(sections)
    save(reversed, get_out_name(args.filename))


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument("delimiter", help="Characters starting each part to reverse. For example '## ' for 2nd level sections.")
    parser.add_argument("filename", help="Input file.")
    return parser.parse_args()


def get_sections(filename, delimiter):
    sections = []
    section = ""
    with open(filename, "r") as fp:
        while True:
            line = fp.readline()
            if not line:
                break

            if line.startswith(delimiter):
                sections.append(section)
                section = ""

            section += line
    sections.append(section)

    return sections


def reverse_sections(sections):
    reversed = []
    reversed.append(sections[0])
    reversed.extend(sections[:0:-1])

    return reversed


def get_out_name(filename):
    name, ext = os.path.splitext(filename)
    return f"{name}_reversed{ext}"


def save(content, filename):
    if os.path.exists(filename):
        overwrite = input(f"Overwrite {filename}? ")
        if overwrite.lower() not in ["y", "yes"]:
            print("Saving aborted.")
            return False

    with open(filename, "w") as f:
        f.writelines(content)

    return True


if __name__ == "__main__":
    main()
