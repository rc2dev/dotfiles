#!/usr/bin/env bash
#
# Copyright (C) 2020-2021 Rafael Cavalcanti <https://rafaelc.org/dev>
# Licensed under GPLv3

readonly sep="  ┇  "

truncate() {
  local -r max_len=23
  local -r str="$*"

  if [[ ${#str} -gt $max_len ]]; then
    local trunc="${str::(( max_len - 3 ))}"
    trunc="$(sed -e 's/[[:space:]]*$//' <<< "$trunc")" # Trim trailing space
    echo "$trunc…"
  else
    echo "$str"
  fi
}

bar_player() {
  local -r status="$(playerctl status 2>/dev/null)"

  [[ "$status" =~ (Playing|Paused) ]] || return 0

  # Reverse to match mpv
  case $status in
    Playing) local -r icon=;;
    Paused) local -r icon=;;
  esac
  local -r title="$(truncate "$(playerctl metadata --format "{{ title }}")")"

  echo "${icon} ${title}"
}

bar_time() {
  echo " $(date +"%a %m-%d, %R")"
}

bar_mem() {
  echo " $(free -h | awk '/^Mem:/ {print $3}')"
}

bar_temp() {
  echo " $(sensors | awk '/^Package/ {print substr($4, 2)}')"
}

bar_battery() {
  local -r battery="/sys/class/power_supply/BAT0"
  if [[ ! -e "$battery" ]]; then
    return
  fi

  local -r status="$(cat "$battery/status")"
  local -r level="$(cat "$battery/capacity")"

  local icon
  case "$status" in
    "Full") icon="" ;;
    "Discharging")
      if [[ $level -gt 50 ]]; then icon=""
      elif [[ $level -gt 15 ]]; then icon=""
      else icon=""
      fi
      ;;
    "Charging") icon="⚡" ;;
    "Not charging") icon="🛑" ;;
    "Unknown") icon="" ;;
  esac

  echo "$icon $level%"
}

declare -ar elements=(
  "$(bar_player)"
  "$(bar_battery)"
  "$(bar_temp)"
  "$(bar_mem)"
  "$(bar_time)"
)

# Generate output string
output="$(printf "\t%s" "${elements[@]}")"
# Remove separator from beginning and duplicated
output="$(sed -E 's/^\t*//; s/\t+/\t/g' <<< ${output})"
# Place chosen separator
output="$(sed "s/\t/$sep/g" <<< ${output})"
# Add space to the end
output="$output "

xsetroot -name "$output"

