#!/usr/bin/env bash
#
# Volume notification: Pulseaudio and dunst
#
# Adapted from https://gist.github.com/Liblor/b01549fef2d3d56247ff0292034a3ad6
# by Rafael Cavalcanti <https://rafaelc.org/dev>
#

set -euo pipefail
readonly step=5

get_volume() {
  pactl get-sink-volume @DEFAULT_SINK@ | awk -F/ '{print $2}' | sed 's/ //g;s/%//g'
}

get_volume_icon() {
  if [[ "$1" -lt 34 ]]; then
    echo "audio-volume-low-symbolic"
  elif [[ "$1" -lt 67 ]]; then
    echo "audio-volume-medium-symbolic"
  elif [[ "$1" -le 100 ]]; then
    echo "audio-volume-high-symbolic"
  else
    echo "audio-volume-overamplified-symbolic"
  fi
}

volume_notification() {
  local -r notify_id=101
  local -r notify_time=3000
  local -r bar_max_size=14

  local -r volume="$(get_volume)"
  local -r vol_icon="$(get_volume_icon "$volume")"
  local -r vol_num="$volume%"

  local bar_size=$((volume * bar_max_size / 100))
  if [[ $bar_size -gt $bar_max_size ]]; then
    bar_size=$bar_max_size
  fi
  local bar=$(seq -s "â”€" $bar_size | sed 's/[0-9]//g')

  dunstify -r $notify_id -u low -t $notify_time -i "$vol_icon" "$vol_num  $bar"
}

mute_notification() {
  local -r muted="$(pactl get-sink-mute @DEFAULT_SINK@)"

  if [[ "$muted" == "Mute: yes" ]]; then
    dunstify -r $notify_id -u low -t 3000 -i audio-volume-muted-symbolic Mute
  else
    dunstify -r $notify_id -u low -t 3000 -i "$(get_volume_icon "$(get_volume)")" Unmute
  fi
}

main() {
  case $1 in
    up)
      pactl set-sink-volume @DEFAULT_SINK@ +$step%
      volume_notification
      ;;
    down)
      pactl set-sink-volume @DEFAULT_SINK@ -$step%
      volume_notification
      ;;
    mute)
      pactl set-sink-mute @DEFAULT_SINK@ toggle
      mute_notification
      ;;
    *)
      echo "Usage: $0 up | down | mute"
      ;;
  esac
}

main "$@"
