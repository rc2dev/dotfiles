#!/usr/bin/env bash
#
# dmenu script for playing radio stations.
#
# Copyright (C) 2022-2024 Rafael Cavalcanti <https://rafaelc.org/dev>
# Licensed under GPLv3

set -euo pipefail

readonly dmenu="${DMENU:-dmenu}"
readonly dmenu_prompt="Radio"
readonly notify_id=103
readonly notify_time=10000
readonly notify_icon="radio"
readonly unit_name="dmenu-radio-player"
readonly cache_dir="${XDG_CACHE_HOME:-$HOME/.cache}/dmenu-radio"
readonly config_dir="${XDG_config_HOME:-$HOME/.config}/dmenu-radio"
readonly last_file="${cache_dir}/last"
readonly streams_file="${config_dir}/streams"
readonly section_prefix="\n➤"


if [[ $dmenu =~ ^dmenu.* ]]; then
  launcher_opts=(-l 9)
else
  launcher_opts=()
fi

mkdir -p "$cache_dir"

if [[ ! -e "$streams_file" ]]; then
  cat <<END
Streams file not found at $streams_file.
Create one following the syntax described in the script.
END
  exit 1
fi

# Syntax for streams file:
# - List streams one per line: name,url
# - Lines starting with $section_prefix are section titles
# - Lines that are blank or starting with # are ignored
readonly streams="$(sed \
  -e '/^#/d' \
  -e '/^\s*$/d' \
  -e "s/\$section_prefix/${section_prefix}/" \
  < "$streams_file")"

if systemctl --user is-active --quiet "$unit_name"; then
  state=" Stop: $(systemctl --user show "$unit_name" | grep Description= | cut -d= -f2-)"
elif [[ -f "$last_file" ]]; then
  state=" Last: $(cat "$last_file")"
else
  state=
fi

readonly menu="$(sed -E 's/^\s+//' <<-END
  $state
   Random
  $streams
END
)"

chosen="$(sed -E 's/,.*$//' <<< "$menu" | $dmenu -p "$dmenu_prompt" "${launcher_opts[@]}")"

# Exit if nothing chosen.
if [[ -z "$chosen" ]] || [[ "$chosen" =~ ^$section_prefix ]]; then
  exit
fi

# Chosen value is valid. Stop if playing.
systemctl --user stop "$unit_name" || true
if [[ "$chosen" =~ Stop ]]; then
  exit
fi

# If chosen value is special, reassign it.
if [[ "$chosen" =~ Last ]]; then
  chosen="$(cat "$last_file")"
elif [[ "$chosen" =~ Random ]]; then
  readonly names_only="$(sed -E 's/,.*$//;/^\s*\W/d;/^\s*$/d' <<< "$streams")"
  chosen="$(shuf -n 1 <<< "$names_only")"
fi

# We should have a stream name now. Record it and get the url.
printf "%s" "$chosen" > "$last_file"
readonly url="$(printf "%s" "$streams" | grep -m 1 "$chosen" | cut -d, -f 2-)"

# Notify and play.
if command -v dunstify >/dev/null; then
  dunstify -r $notify_id -t "$notify_time" -i "$notify_icon" "Playing" "<i>$chosen</i>"
elif command -v notify-send >/dev/null; then
  notify-send -i "$notify_icon" "Playing" "$chosen"
else
  printf "Playing: %s\n" "$chosen"
fi

systemd-run \
  --user \
  --collect \
  --unit "$unit_name" \
  --description "$chosen" \
  mpv --no-video --no-resume-playback $url  # Don't double quote as url can include mpv options.
