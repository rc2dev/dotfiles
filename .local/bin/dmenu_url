#!/usr/bin/env bash
#
# dmenu script for choosing application to open URLs from clipboard.
#
# Copyright (C) 2021 Rafael Cavalcanti <https://rafaelc.org/dev>
# Licensed under GPLv3

readonly term="$TERMINAL"
readonly term_instance="sys"

declare -Ar options=(
	["Chromium"]="chromium-freeworld"
	["Chromium (incognito)"]="chromium-freeworld --incognito"
	["Chromium (guest)"]="chromium-freeworld --guest"
	["mpv"]="mpv"
	["yt-dlp"]="ydl"
	["Wallabag it"]="to_wallabag"
)

ydl() {
	$term -n "$term_instance" -e bash -c '
		mkdir -p ~/Downloads/yt-dlp && cd ~/Downloads/yt-dlp
		printf "Downloading these URLs:\n"
		printf "%s\n\n" "$@"

		printf "%s\0" "$@" | xargs -0 -n 1 -P 5 yt-dlp
	' --	"${urls[@]}"
}

to_wallabag() {
	for url in "${urls[@]}"; do
		if wallabag add "$url"; then
			notify-send --urgency=low "dmenu_url - Wallabag" "Added: $url"
		else
			notify-send --urgency=critical "dmenu_url - Wallabag" "Error adding: $url"
		fi
	done
}

# Copied from https://gist.github.com/cdown/1163649
encode_url() {
	# urlencode <string>

	old_lc_collate=$LC_COLLATE
	LC_COLLATE=C

	local length="${#1}"
	for (( i = 0; i < length; i++ )); do
		local c="${1:$i:1}"
		case $c in
			[a-zA-Z0-9.~_-]) printf '%s' "$c" ;;
			*) printf '%%%02X' "'$c" ;;
		esac
	done

	LC_COLLATE=$old_lc_collate
}

declare -ar clipboard=($(xclip -out -selection clipboard))
declare -a urls=()
readonly url_regex='(https?|ftp|file)://[-A-Za-z0-9\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&@#/%=~_|]'
for url in "${clipboard[@]}"; do
	[[ $url =~ $url_regex ]] && urls+=("$url")
done

if [[ ${#urls[@]} -eq 0 ]]; then
	notify-send "dmenu_url" "No URLs on clipboard."
	exit
fi

readonly urls_str="${urls[*]}"
readonly prompt="open ${#urls[@]} url(s): ${urls_str::30}..."
readonly chosen="$(printf "%s\n" "${!options[@]}" | sort | dmenu -p "$prompt" "$@")"
[[ -z "$chosen" ]] && exit

readonly cmd="${options["$chosen"]}"
$cmd "${urls[@]}"

