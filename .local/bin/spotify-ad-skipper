#!/usr/bin/env bash
#
# Skip ads on Spotify. Exits if Spotify is not running.
#
# This code was simpler and placed directly in the spotify wrapper. However,
# the flatpak version complicates things by immediately exiting on launch,
# forcing us to periodically check if spotify is running if we want to kill the
# ad-skipper appropriately. This new complexity resulted in this separate file.
#
# Author: Rafael Cavalcanti - rafaelc.org

readonly script_name="$(basename "$0")"

log() {
  echo "[$script_name] $*" 1>&2
}

log "Starting..."

# Only allow one instance
readonly pidfile="${XDG_RUNTIME_DIR}/${script_name}.pid"

if [[ -e $pidfile ]]; then
  pid="$(cat "$pidfile")"
  if kill "$pid" > /dev/null; then
    log "Already running."
    exit 1
  else
     rm "$pidfile"
  fi
fi
echo $$ > "$pidfile"

trap 'rm $pidfile' EXIT

# Check dependencies
if ! command -v playerctl >/dev/null; then
  log "Playerctl not found. Exiting..."
  exit 1
fi

# Skip ads or exit
while true; do
  status="$(playerctl --player=spotify metadata --format="{{status}} {{title}}" 2>/dev/null)"

  # Checking playerctl exit status is not reliable after some period of inactivity from Spotify.
  # We also allow some time to Spotify to start.
  wmctrl -xl | grep -q spotify.Spotify
  if [[ $? -ne 0 && $SECONDS -gt 30 ]]; then
    log "Spotify is not running. Exiting..."
    exit
  fi

  if [[ "$status" =~ ^Playing\ (Advertisement|Spotify)$ ]]; then
    playerctl --player=spotify next && notify-send --urgency=low --icon "Spotify" "Attempted to skip Spotify ad."
  fi

  sleep 2s
done

